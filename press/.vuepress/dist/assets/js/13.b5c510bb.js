(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{201:function(v,i,_){"use strict";_.r(i);var s=_(0),l=Object(s.a)({},(function(){var v=this,i=v.$createElement,_=v._self._c||i;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"项目经历描述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#项目经历描述","aria-hidden":"true"}},[v._v("#")]),v._v(" 项目经历描述")]),v._v(" "),_("p",[v._v("项目经历中扮演的角色、"),_("br"),v._v("\n负责的模块、"),_("br"),v._v("\n碰到的问题、"),_("br"),v._v("\n解决的思路、"),_("br"),v._v("\n达成的效果以及最后的总结与沉淀")]),v._v(" "),_("h2",{attrs:{id:"面试题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#面试题","aria-hidden":"true"}},[v._v("#")]),v._v(" 面试题")]),v._v(" "),_("p",[_("a",{attrs:{href:"https://www.cxymsg.com",target:"_blank",rel:"noopener noreferrer"}},[v._v("前端面试与进阶指南"),_("OutboundLink")],1)]),v._v(" "),_("h2",{attrs:{id:"解题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#解题","aria-hidden":"true"}},[v._v("#")]),v._v(" 解题")]),v._v(" "),_("h3",{attrs:{id:"子域名访问计数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#子域名访问计数","aria-hidden":"true"}},[v._v("#")]),v._v(" 子域名访问计数")]),v._v(" "),_("p",[v._v("/*")]),v._v(" "),_("ul",[_("li",[v._v("@lc app=leetcode.cn id=811 lang=javascript")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("[811] 子域名访问计数")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v('一个网站域名，如"discuss.leetcode.com"，包含了多个子域名。作为顶级域名，常用的有"com"，下一级则有"leetcode.com"，最低的一级为"discuss.leetcode.com"。当我们访问域名"discuss.leetcode.com"时，也同时访问了其父域名"leetcode.com"以及顶级域名')]),v._v(" "),_("li",[v._v('"com"。')]),v._v(" "),_("li"),v._v(" "),_("li",[v._v('给定一个带访问次数和域名的组合，要求分别计算每个域名被访问的次数。其格式为访问次数+空格+地址，例如："9001')]),v._v(" "),_("li",[v._v('discuss.leetcode.com"。')]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("接下来会给出一组访问次数和域名组合的列表cpdomains 。要求解析出所有域名的访问次数，输出格式和输入格式相同，不限定先后顺序。")]),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li",[v._v("示例 1:")]),v._v(" "),_("li",[v._v("输入:")]),v._v(" "),_("li",[v._v('["9001 discuss.leetcode.com"]')]),v._v(" "),_("li",[v._v("输出:")]),v._v(" "),_("li",[v._v('["9001 discuss.leetcode.com", "9001 leetcode.com", "9001 com"]')]),v._v(" "),_("li",[v._v("说明:")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v('例子中仅包含一个网站域名："discuss.leetcode.com"。按照前文假设，子域名"leetcode.com"和"com"都会被访问，所以它们都被访问了9001次。')]),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li",[v._v("示例 2")]),v._v(" "),_("li",[v._v("输入:")]),v._v(" "),_("li",[v._v('["900 google.mail.com", "50 yahoo.com", "1 intel.mail.com", "5 wiki.org"]')]),v._v(" "),_("li",[v._v("输出:")]),v._v(" "),_("li",[v._v('["901 mail.com", "50 yahoo.com", "900 google.mail.com", "5 wiki.org", "5 org", "1')]),v._v(" "),_("li",[v._v('intel.mail.com", "951 com"]')]),v._v(" "),_("li",[v._v("说明:")]),v._v(" "),_("li",[v._v('按照假设，会访问"google.mail.com" 900次，"yahoo.com" 50次，"intel.mail.com"')]),v._v(" "),_("li",[v._v('1次，"wiki.org" 5次。')]),v._v(" "),_("li",[v._v('而对于父域名，会访问"mail.com" 900+1 = 901次，"com" 900 + 50 + 1 = 951次，和 "org" 5 次。')]),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li",[v._v("注意事项：")]),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li",[v._v("cpdomains 的长度小于 100。")]),v._v(" "),_("li",[v._v("每个域名的长度小于100。")]),v._v(" "),_("li",[v._v('每个域名地址包含一个或两个"."符号。')]),v._v(" "),_("li",[v._v("输入中任意一个域名的访问次数都小于10000。")]),v._v(" "),_("li"),v._v(" "),_("li")]),v._v(" "),_("p",[v._v("*/")]),v._v(" "),_("p",[v._v("第一次提交")]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v('var subdomainVisits = function(cpdomains) {\n  var split_result = {};\n  for (var i = 0; i < cpdomains.length; i++) {\n    var item = cpdomains[i];\n    var split_arr = item.split(" ");\n    var dom = split_arr[1].split(".");\n    split_result[split_arr[1]] = split_result[split_arr[1]]\n      ? parseInt(split_result[split_arr[1]]) + parseInt(split_arr[0])\n      : split_arr[0];\n    for (var j = dom.length; j > 1; j--) {\n      var name = dom[j - 1] + (dom[j] ? "." + dom[j] : "");\n      split_result[name] = split_result[name]\n        ? parseInt(split_result[name]) + parseInt(split_arr[0])\n        : split_arr[0];\n    }\n  }\n  return Object.keys(split_result).map(function(key) {\n    return split_result[key] + " " + key;\n  });\n};\n')])])]),_("p",[v._v("52/52 cases passed (92 ms)"),_("br"),v._v("\nYour runtime beats 68.04 % of javascript submissions"),_("br"),v._v("\nYour memory usage beats 28.39 % of javascript submissions (39.3 MB)"),_("br"),v._v("\n第二次提交")]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v('var subdomainVisits = function(cpdomains) {\n  var split_result = {};\n  for (var i = 0; i < cpdomains.length; i++) {\n      var currentNum = 0;\n      Array.from(cpdomains[i].match(/(\\d+) ([\\w\\d]+.?([\\w\\d]+.?([\\w\\d]+)?)?)/)||[]).forEach(function(name, index){\n        if (index < 2) {\n            currentNum = parseInt(name);\n            return;\n        }\n        if (!name) {\n            return;\n        }\n        split_result[name] = split_result[name]\n            ? parseInt(split_result[name]) + currentNum\n            : currentNum;\n    });\n  }\n  return Object.keys(split_result).map(function(key) {\n    return split_result[key] + " " + key;\n  });\n};\n')])])]),_("p",[v._v("52/52 cases passed (84 ms)"),_("br"),v._v("\nYour runtime beats 88.66 % of javascript submissions"),_("br"),v._v("\nYour memory usage beats 64.2 % of javascript submissions (38.9 MB)")]),v._v(" "),_("h3",{attrs:{id:"种花问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#种花问题","aria-hidden":"true"}},[v._v("#")]),v._v(" 种花问题")]),v._v(" "),_("p",[v._v("/*")]),v._v(" "),_("ul",[_("li",[v._v("@lc app=leetcode.cn id=605 lang=javascript")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("[605] 种花问题")]),v._v(" "),_("li",[v._v("假设你有一个很长的花坛，一部分地块种植了花，另一部分却没有。可是，花卉不能种植在相邻的地块上，它们会争夺水源，两者都会死去。")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("给定一个花坛（表示为一个数组包含0和1，其中0表示没种植花，1表示种植了花），和一个数 n 。能否在不打破种植规则的情况下种入 n")]),v._v(" "),_("li",[v._v("朵花？能则返回True，不能则返回False。")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("示例 1:")]),v._v(" "),_("li",[v._v("输入: flowerbed = [1, 0, 0, 0, 1], n = 1")]),v._v(" "),_("li",[v._v("输出: True")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("示例 2:")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("输入: flowerbed = [1, 0, 0, 0, 1], n = 2")]),v._v(" "),_("li",[v._v("输出: False")]),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li",[v._v("注意:")]),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li",[v._v("数组内已种好的花不会违反种植规则。")]),v._v(" "),_("li",[v._v("输入的数组长度范围为 [1, 20000]。")]),v._v(" "),_("li",[v._v("n 是非负整数，且不会超过输入数组的大小。\n*/")])]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v(" var canPlaceFlowers = function(flowerbed, n) {\n    var canFlowers = false;                                                                                                                            \n    for(var i=0; i<flowerbed.length;i++) {\n        if(flowerbed[i] === 0) {\n            if (flowerbed[i-1]!=1&&flowerbed[i+1]!=1) {\n                n--;\n                i=i+1;\n            }\n        }\n        if (n<1) {\n            canFlowers = true;\n            break;\n        }\n    }\n    return canFlowers;\n};\n")])])]),_("p",[v._v("123/123 cases passed (84 ms)"),_("br"),v._v("\nYour runtime beats 46.2 % of javascript submissions"),_("br"),v._v("\nYour memory usage beats 57.35 % of javascript submissions (36.6 MB)")]),v._v(" "),_("h3",{attrs:{id:"在lr字符串中交换相邻字符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#在lr字符串中交换相邻字符","aria-hidden":"true"}},[v._v("#")]),v._v(" 在LR字符串中交换相邻字符")]),v._v(" "),_("p",[v._v("/*")]),v._v(" "),_("ul",[_("li",[v._v("[777] 在LR字符串中交换相邻字符")]),v._v(" "),_("li",[v._v("在一个由 'L' , 'R' 和 'X'")]),v._v(" "),_("li",[v._v('三个字符组成的字符串（例如"RXXLRXRXL"）中进行移动操作。一次移动操作指用一个"LX"替换一个"XL"，或者用一个"XR"替换一个"RX"。现给定起始字符串start和结束字符串end，请编写代码，当且仅当存在一系列移动操作使得start可以转换成end时，')]),v._v(" "),_("li",[v._v("返回True。")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("示例 :")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v('输入: start = "RXXLRXRXL", end = "XRLXXRRLX"')]),v._v(" "),_("li",[v._v("输出: True")]),v._v(" "),_("li",[v._v("解释:")]),v._v(" "),_("li",[v._v("我们可以通过以下几步将start转换成end:")]),v._v(" "),_("li",[v._v("RXXLRXRXL ->")]),v._v(" "),_("li",[v._v("XRXLRXRXL ->")]),v._v(" "),_("li",[v._v("XRLXRXRXL ->")]),v._v(" "),_("li",[v._v("XRLXXRRXL ->")]),v._v(" "),_("li",[v._v("XRLXXRRLX")]),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li",[v._v("注意:")]),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li",[v._v("1 <= len(start) = len(end) <= 10000。")]),v._v(" "),_("li",[v._v("start和end中的字符串仅限于'L', 'R'和'X'。")]),v._v(" "),_("li")]),v._v(" "),_("p",[v._v("*/")]),v._v(" "),_("h3",{attrs:{id:"二分查找"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二分查找","aria-hidden":"true"}},[v._v("#")]),v._v(" 二分查找")]),v._v(" "),_("p",[v._v("/*")]),v._v(" "),_("ul",[_("li",[v._v("@lc app=leetcode.cn id=704 lang=javascript")]),v._v(" "),_("li",[v._v("给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的")]),v._v(" "),_("li",[v._v("target，如果目标值存在返回下标，否则返回 -1。")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("示例 1:")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("输入: nums = [-1, 0, 3, 5, 9, 12], target = 9")]),v._v(" "),_("li",[v._v("输出: 4")]),v._v(" "),_("li",[v._v("解释: 9 出现在 nums 中并且下标为 4")]),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li",[v._v("示例 2:")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("输入: nums = [-1, 0, 3, 5, 9, 12], target = 2")]),v._v(" "),_("li",[v._v("输出: -1")]),v._v(" "),_("li",[v._v("解释: 2 不存在 nums 中因此返回 -1")]),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li",[v._v("提示：")]),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li",[v._v("你可以假设 nums 中的所有元素是不重复的。")]),v._v(" "),_("li",[v._v("n 将在 [1, 10000]之间。")]),v._v(" "),_("li",[v._v("nums 的每个元素都将在 [-9999, 9999]之间。")]),v._v(" "),_("li"),v._v(" "),_("li")]),v._v(" "),_("p",[v._v("*/\n第一反应=-=：")]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("nums.indexOf(target)\n")])])]),_("p",[v._v("46/46 cases passed (104 ms)"),_("br"),v._v("\nYour runtime beats 6.85 % of javascript submissions"),_("br"),v._v("\nYour memory usage beats 44.47 % of javascript submissions (36.8 MB)"),_("br"),v._v("\n老实用二分法：")]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("var search = function(nums, target) {\n    var start = 0;\n    var end = nums.length - 1;\n    while(start<=end) {\n        var mid = start+Math.floor((end - start)/2);\n        if (nums[mid] === target) {\n            return mid;\n        }\n        if (nums[mid] > target) {\n            end = mid -1;\n        }else{\n            start = mid +1;\n        }\n    }\n    return -1;\n};\n")])])]),_("p",[v._v("46/46 cases passed (64 ms)"),_("br"),v._v("\nYour runtime beats 94.63 % of javascript submissions"),_("br"),v._v("\nYour memory usage beats 44.68 % of javascript submissions (36.8 MB)")]),v._v(" "),_("h3",{attrs:{id:"不相交的线"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#不相交的线","aria-hidden":"true"}},[v._v("#")]),v._v(" 不相交的线")]),v._v(" "),_("p",[v._v("/*")]),v._v(" "),_("ul",[_("li",[v._v("我们在两条独立的水平线上按给定的顺序写下 A 和 B 中的整数。")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("现在，我们可以绘制一些连接两个数字 A[i] 和 B[j] 的直线，只要 A[i] == B[j]，且我们绘制的直线不与任何其他连线（非水平线）相交。")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("以这种方法绘制线条，并返回我们可以绘制的最大连线数。")]),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li",[v._v("示例 1：")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("输入：A = [1,4,2], B = [1,2,4]")]),v._v(" "),_("li",[v._v("输出：2")]),v._v(" "),_("li",[v._v("解释：")]),v._v(" "),_("li",[v._v("我们可以画出两条不交叉的线，如上图所示。")]),v._v(" "),_("li",[v._v("我们无法画出第三条不相交的直线，因为从 A[1]=4 到 B[2]=4 的直线将与从 A[2]=2 到 B[1]=2 的直线相交。")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("示例 2：")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("输入：A = [2,5,1,2,5], B = [10,5,2,1,5,2]")]),v._v(" "),_("li",[v._v("输出：3")]),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li",[v._v("示例 3：")]),v._v(" "),_("li"),v._v(" "),_("li",[v._v("输入：A = [1,3,7,1,7,5], B = [1,9,2,5,1]")]),v._v(" "),_("li",[v._v("输出：2")]),v._v(" "),_("li"),v._v(" "),_("li"),v._v(" "),_("li")]),v._v(" "),_("p",[v._v("*/")])])}),[],!1,null,null,null);i.default=l.exports}}]);