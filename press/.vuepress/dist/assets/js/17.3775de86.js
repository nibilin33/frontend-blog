(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{153:function(r,t,v){"use strict";v.r(t);var e=v(0),n=Object(e.a)({},(function(){var r=this,t=r.$createElement,v=r._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[v("h2",{attrs:{id:"内嵌web加载慢"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内嵌web加载慢","aria-hidden":"true"}},[r._v("#")]),r._v(" 内嵌web加载慢")]),r._v(" "),v("p",[r._v("优化的核心是让服务端的资源能够本地化"),v("br"),r._v(" "),v("strong",[r._v("方案一：PWA")]),v("br"),r._v("\n那么什么是PWA？")]),r._v(" "),v("blockquote",[v("p",[r._v("Progressive Web App, 简称 PWA，是提升 Web App 的体验的一种新方法，能给用户原生应用的体验。\nPWA 能做到原生应用的体验不是靠特指某一项技术，而是经过应用一些新技术进行改进，\n在安全、性能和体验三个方面都有很大提升，PWA 本质上是 Web App，\n借助一些新技术也具备了 Native App 的一些特性，兼具 Web App 和 Native App 的优点。")])]),r._v(" "),v("blockquote",[v("p",[r._v("PWA 的主要特点包括下面三点：")]),r._v(" "),v("ul",[v("li",[r._v("可靠 - 即使在不稳定的网络环境下，也能瞬间加载并展现")]),r._v(" "),v("li",[r._v("体验 - 快速响应，并且有平滑的动画响应用户的操作")]),r._v(" "),v("li",[r._v("粘性 - 像设备上的原生应用，具有沉浸式的用户体验，用户可以添加到桌面"),v("br"),r._v("\nPWA 本身强调渐进式，并不要求一次性达到安全、性能和体验上的所有要求，开发者可以通过 PWA Checklist 查看现有的特征。")])])]),r._v(" "),v("p",[r._v("具体的可以查看 "),v("a",{attrs:{href:"https://lavas.baidu.com/pwa/README",target:"_blank",rel:"noopener noreferrer"}},[r._v("https://lavas.baidu.com/pwa/README"),v("OutboundLink")],1),v("br"),r._v("\n或者 "),v("a",{attrs:{href:"https://lavas-project.github.io/pwa-book/",target:"_blank",rel:"noopener noreferrer"}},[r._v("PWA 应用实战"),v("OutboundLink")],1),v("br"),r._v(" "),v("strong",[r._v("想法")]),v("br"),r._v("\nPWA请求一次后资源都缓存在本地了，可以利用这个特点，在终端启动的时候先请求"),v("br"),r._v("\n往后所有资源都可以在缓存里面拿，当资源需要更新的时候，Service Worker 也提供"),v("br"),r._v("\n更新资源的方法。"),v("br"),r._v("\n这样从缓存到更新所有策略都无需终端干涉，终端目测只要修改cef的一些配置。"),v("br"),r._v("\n但目前来看，server-workder 有https,或者127.0.0.1 的限制。"),v("br"),r._v("\n如果为http请求无法注册成功。")]),r._v(" "),v("p",[v("strong",[r._v("方案二：")]),v("br"),r._v("\n终端在请求到html的时候，写入一个js脚本，这个脚本做资源判断，"),v("br"),r._v("\n如果资源和本地一致，替换成本地资源路径。"),v("br"),r._v("\n如果存在不一致，先使用远程的。并且需要下载资源包进行替换。")]),r._v(" "),v("p",[v("strong",[r._v("方案三：")]),v("br"),r._v("\n前提：本地已经下载好资源。"),v("br"),r._v("\n用file协议直接打开index.html，前端路由模式需要改成hash。"),v("br"),r._v("\n在ajax请求方面，如果webview能够拦截请求，需要判断是请求资源还是接口请求。"),v("br"),r._v("\n如果是接口请求，需要加上服务器地址。"),v("br"),r._v("\n如果无法拦截，就需要向终端获取服务器地址。"),v("br"),r._v("\n本地更新策略采用定时请求版本情况，发现版本变更，下载资源包替换。"),v("br"),r._v("\n这个大概由原来无感知更新变成有感知更新。")]),r._v(" "),v("h2",{attrs:{id:"android的webview概率触摸白屏"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#android的webview概率触摸白屏","aria-hidden":"true"}},[r._v("#")]),r._v(" Android的webview概率触摸白屏")]),r._v(" "),v("p",[r._v("网上看到的一个类似的解释："),v("br"),r._v("\nwebkit在绘制页面时会将结构分为各种层，"),v("br"),r._v("\n当层足够大时就会变成很大的平铺层。"),v("br"),r._v("\n这样一来webkit在每次页面结构发生变化时不需要都渲染整个页面而是渲染对应层了，"),v("br"),r._v("\n这对渲染速度来说相当的重要。"),v("br"),r._v("\nwebkit会给各种层分配一定大小的“后备存储器”在内存里缓存起来，"),v("br"),r._v("\n这就是绘制层的上下文，通过这个上下文就可以很容易的实现各种效果（动画，3D变换等），"),v("br"),r._v("\n“后备存储器”内存占用大小不仅依层而定，"),v("br"),r._v("\n跟设备和显示方式也是有关的，假设这在普通屏幕下是1：1的，"),v("br"),r._v("\n但在Retina屏幕下则是1：2的，并且放大时这个量会成倍增加；"),v("br"),r._v("\n一张图片是10X10，普通屏幕分配的就是10X10，Retina初始则是20X20。"),v("br"),r._v("\n这也表明Retina是更加消耗内存的。"),v("br"),r._v("\n当层很大时，意味着“后备存储器”会消耗更大的内存，为了避免这点，"),v("br"),r._v("\nwebkit并不会绘制一个很大的层来存储一个很大的页面，"),v("br"),r._v("\n比如说平铺层则会拆分成很多的块来绘制，即尽占用尽可能小的内存，"),v("br"),r._v("\n只是将可视范围内的那部分渲染出来。"),v("br"),r._v("\n这就是为什么我们在大页面滚动时会发现下面的内容慢慢显示，"),v("br"),r._v("\n向上滚动时上面的内容还慢慢显示的原因。")]),r._v(" "),v("p",[r._v("以下则是webkit划分为层绘制的场景：")]),r._v(" "),v("p",[r._v("1、页面主容器永远是独立的平铺层"),v("br"),r._v("\n2.绘制密集型元素时，如video，canvas"),v("br"),r._v("\n3、应用3D transformations的元素，包括translate3d, rotate3d, translateZ"),v("br"),r._v("\n4、内容被加强时，如Filters, masks, reflections, opacity, transitions, animations"),v("br"),r._v("\n5、某些特殊的情况下也会，如position:fixed, -webkit-overflow-scrolling:touch"),v("br"),r._v("\n6、任何在已知层上覆盖的内容")]),r._v(" "),v("p",[v("strong",[r._v("所以解决方案就是Android开启硬件加速")])]),r._v(" "),v("h2",{attrs:{id:"nginx-502问题，node-的锅？！"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#nginx-502问题，node-的锅？！","aria-hidden":"true"}},[r._v("#")]),r._v(" NGINX 502问题，node 的锅？！")]),r._v(" "),v("p",[r._v("对于一个没有服务器任何相关经验的人类，"),v("br"),r._v("\n接收到这样的一个结论，感受到巨大的恶意。"),v("br"),r._v("\n叕一次踏上自证清白的道路。")]),r._v(" "),v("h2",{attrs:{id:"大数据量情况的性能问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#大数据量情况的性能问题","aria-hidden":"true"}},[r._v("#")]),r._v(" 大数据量情况的性能问题")]),r._v(" "),v("h3",{attrs:{id:"可以用上的工具"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#可以用上的工具","aria-hidden":"true"}},[r._v("#")]),r._v(" 可以用上的工具")]),r._v(" "),v("ul",[v("li",[r._v("css 压力测试(css stress test)")]),r._v(" "),v("li",[r._v("css 性能分析器（the css profilers are coming）")]),r._v(" "),v("li",[r._v("css lint")]),r._v(" "),v("li",[r._v("dom monster")])]),r._v(" "),v("h3",{attrs:{id:"ui性能关注点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ui性能关注点","aria-hidden":"true"}},[r._v("#")]),r._v(" UI性能关注点")]),r._v(" "),v("ul",[v("li",[r._v("大量元素应用border-radius会拖慢页面")]),r._v(" "),v("li",[r._v("调整移动设备的viewport标签可以减少渲染时间")]),r._v(" "),v("li",[r._v("旧版webkit boxshandows 在滚动和渲染会有延迟问题")]),r._v(" "),v("li",[r._v("css 径向渐变在某些浏览器会有渲染问题，特别是Android")]),r._v(" "),v("li",[r._v("避免使用IE css 滤镜，会有性能问题")]),r._v(" "),v("li",[r._v("使用硬件加速css动画替代javascript动画")])]),r._v(" "),v("h2",{attrs:{id:"内存泄漏问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏问题","aria-hidden":"true"}},[r._v("#")]),r._v(" 内存泄漏问题")])])}),[],!1,null,null,null);t.default=n.exports}}]);