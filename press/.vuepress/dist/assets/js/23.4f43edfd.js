(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{216:function(n,r,t){"use strict";t.r(r);var s=t(0),e=Object(s.a)({},(function(){var n=this,r=n.$createElement,t=n._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h2",{attrs:{id:"惰性单例模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#惰性单例模式","aria-hidden":"true"}},[n._v("#")]),n._v(" 惰性单例模式")]),n._v(" "),t("p",[n._v("lazyload加载图片，它就是惰性加载，只当含有图片资源的dom元素出现在媒体设备的可视区时，图片资源才会被加载，这种加载模式就是惰性加载.")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("var singleton = function(fn) {\n    var instance;\n    return function() {\n        return instance || (instance = fn.apply(this, arguments));\n    }\n};\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br")])]),t("h2",{attrs:{id:"发布订阅vs观察者"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发布订阅vs观察者","aria-hidden":"true"}},[n._v("#")]),n._v(" 发布订阅vs观察者")]),n._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/MudOnTire/frontend-design-patterns",target:"_blank",rel:"noopener noreferrer"}},[n._v("参考"),t("OutboundLink")],1)]),n._v(" "),t("p",[n._v("观察者模式中观察者和目标直接进行交互，"),t("br"),n._v("\n而发布订阅模式中统一由调度中心进行处理，订阅者和发布者互不干扰."),t("br"),n._v("\n从使用层面上讲："),t("br"),n._v("\n观察者模式，多用于单个应用内部"),t("br"),n._v("\n发布订阅模式，则更多的是一种跨应用的模式(cross-application pattern)，比如我们常用的消息中间件")]),n._v(" "),t("p",[n._v("观察者模式中Subject对象一般需要实现以下API："),t("br"),n._v("\n● subscribe(): 接收一个观察者observer对象，使其订阅自己"),t("br"),n._v("\n● unsubscribe(): 接收一个观察者observer对象，使其取消订阅自己"),t("br"),n._v("\n● fire(): 触发事件，通知到所有观察者")])])}),[],!1,null,null,null);r.default=e.exports}}]);