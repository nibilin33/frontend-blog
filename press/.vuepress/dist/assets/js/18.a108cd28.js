(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{218:function(s,n,a){"use strict";a.r(n);var e=a(0),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"项目经历描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目经历描述","aria-hidden":"true"}},[s._v("#")]),s._v(" 项目经历描述")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("项目经历中扮演的角色、"),a("br"),s._v("\n负责的模块、"),a("br"),s._v("\n碰到的问题、"),a("br"),s._v("\n解决的思路、"),a("br"),s._v("\n达成的效果以及最后的总结与沉淀")])]),s._v(" "),a("h2",{attrs:{id:"面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试题","aria-hidden":"true"}},[s._v("#")]),s._v(" 面试题")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.cxymsg.com",target:"_blank",rel:"noopener noreferrer"}},[s._v("前端面试与进阶指南"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"解题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解题","aria-hidden":"true"}},[s._v("#")]),s._v(" 解题")]),s._v(" "),a("h3",{attrs:{id:"子域名访问计数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子域名访问计数","aria-hidden":"true"}},[s._v("#")]),s._v(" 子域名访问计数")]),s._v(" "),a("p",[s._v("/\n@lc app=leetcode.cn id=811 lang=javascript")]),s._v(" "),a("p",[s._v("[811] 子域名访问计数")]),s._v(" "),a("p",[s._v('一个网站域名，如"discuss.leetcode.com"，包含了多个子域名。作为顶级域名，常用的有"com"，下一级则有"leetcode.com"，最低的一级为"discuss.leetcode.com"。当我们访问域名"discuss.leetcode.com"时，也同时访问了其父域名"leetcode.com"以及顶级域名\n"com"。')]),s._v(" "),a("p",[s._v('给定一个带访问次数和域名的组合，要求分别计算每个域名被访问的次数。其格式为访问次数+空格+地址，例如："9001\ndiscuss.leetcode.com"。')]),s._v(" "),a("p",[s._v("接下来会给出一组访问次数和域名组合的列表cpdomains 。要求解析出所有域名的访问次数，输出格式和输入格式相同，不限定先后顺序。")]),s._v(" "),a("p",[s._v('示例 1:\n输入:\n["9001 discuss.leetcode.com"]\n输出:\n["9001 discuss.leetcode.com", "9001 leetcode.com", "9001 com"]\n说明:')]),s._v(" "),a("p",[s._v('例子中仅包含一个网站域名："discuss.leetcode.com"。按照前文假设，子域名"leetcode.com"和"com"都会被访问，所以它们都被访问了9001次。')]),s._v(" "),a("p",[s._v('示例 2\n输入:\n["900 google.mail.com", "50 yahoo.com", "1 intel.mail.com", "5 wiki.org"]\n输出:\n["901 mail.com", "50 yahoo.com", "900 google.mail.com", "5 wiki.org", "5 org", "1\nintel.mail.com", "951 com"]\n说明:\n按照假设，会访问"google.mail.com" 900次，"yahoo.com" 50次，"intel.mail.com"\n1次，"wiki.org" 5次。\n而对于父域名，会访问"mail.com" 900+1 = 901次，"com" 900 + 50 + 1 = 951次，和 "org" 5 次。')]),s._v(" "),a("p",[s._v("注意事项：")]),s._v(" "),a("p",[s._v('cpdomains 的长度小于 100。\n每个域名的长度小于100。\n每个域名地址包含一个或两个"."符号。\n输入中任意一个域名的访问次数都小于10000。')]),s._v(" "),a("p",[s._v("/")]),s._v(" "),a("p",[s._v("第一次提交")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var subdomainVisits = function(cpdomains) {\n  var split_result = {};\n  for (var i = 0; i < cpdomains.length; i++) {\n    var item = cpdomains[i];\n    var split_arr = item.split(" ");\n    var dom = split_arr[1].split(".");\n    split_result[split_arr[1]] = split_result[split_arr[1]]\n      ? parseInt(split_result[split_arr[1]]) + parseInt(split_arr[0])\n      : split_arr[0];\n    for (var j = dom.length; j > 1; j--) {\n      var name = dom[j - 1] + (dom[j] ? "." + dom[j] : "");\n      split_result[name] = split_result[name]\n        ? parseInt(split_result[name]) + parseInt(split_arr[0])\n        : split_arr[0];\n    }\n  }\n  return Object.keys(split_result).map(function(key) {\n    return split_result[key] + " " + key;\n  });\n};\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])])]),a("p",[s._v("52/52 cases passed (92 ms)"),a("br"),s._v("\nYour runtime beats 68.04 % of javascript submissions"),a("br"),s._v("\nYour memory usage beats 28.39 % of javascript submissions (39.3 MB)"),a("br"),s._v("\n第二次提交")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var subdomainVisits = function(cpdomains) {\n  var split_result = {};\n  for (var i = 0; i < cpdomains.length; i++) {\n      var currentNum = 0;\n      Array.from(cpdomains[i].match(/(\\d+) ([\\w\\d]+.?([\\w\\d]+.?([\\w\\d]+)?)?)/)||[]).forEach(function(name, index){\n        if (index < 2) {\n            currentNum = parseInt(name);\n            return;\n        }\n        if (!name) {\n            return;\n        }\n        split_result[name] = split_result[name]\n            ? parseInt(split_result[name]) + currentNum\n            : currentNum;\n    });\n  }\n  return Object.keys(split_result).map(function(key) {\n    return split_result[key] + " " + key;\n  });\n};\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])])]),a("p",[s._v("52/52 cases passed (84 ms)"),a("br"),s._v("\nYour runtime beats 88.66 % of javascript submissions"),a("br"),s._v("\nYour memory usage beats 64.2 % of javascript submissions (38.9 MB)")]),s._v(" "),a("h3",{attrs:{id:"种花问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#种花问题","aria-hidden":"true"}},[s._v("#")]),s._v(" 种花问题")]),s._v(" "),a("p",[s._v("/\n@lc app=leetcode.cn id=605 lang=javascript")]),s._v(" "),a("p",[s._v("[605] 种花问题\n假设你有一个很长的花坛，一部分地块种植了花，另一部分却没有。可是，花卉不能种植在相邻的地块上，它们会争夺水源，两者都会死去。")]),s._v(" "),a("p",[s._v("给定一个花坛（表示为一个数组包含0和1，其中0表示没种植花，1表示种植了花），和一个数 n 。能否在不打破种植规则的情况下种入 n\n朵花？能则返回True，不能则返回False。")]),s._v(" "),a("p",[s._v("示例 1:\n输入: flowerbed = [1, 0, 0, 0, 1], n = 1\n输出: True")]),s._v(" "),a("p",[s._v("示例 2:")]),s._v(" "),a("p",[s._v("输入: flowerbed = [1, 0, 0, 0, 1], n = 2\n输出: False")]),s._v(" "),a("p",[s._v("注意:")]),s._v(" "),a("p",[s._v("数组内已种好的花不会违反种植规则。\n输入的数组长度范围为 [1, 20000]。\nn 是非负整数，且不会超过输入数组的大小。\n/")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(" var canPlaceFlowers = function(flowerbed, n) {\n    var canFlowers = false;                                                                                                                            \n    for(var i=0; i<flowerbed.length;i++) {\n        if(flowerbed[i] === 0) {\n            if (flowerbed[i-1]!=1&&flowerbed[i+1]!=1) {\n                n--;\n                i=i+1;\n            }\n        }\n        if (n<1) {\n            canFlowers = true;\n            break;\n        }\n    }\n    return canFlowers;\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])])]),a("p",[s._v("123/123 cases passed (84 ms)"),a("br"),s._v("\nYour runtime beats 46.2 % of javascript submissions"),a("br"),s._v("\nYour memory usage beats 57.35 % of javascript submissions (36.6 MB)")]),s._v(" "),a("h3",{attrs:{id:"二分查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二分查找","aria-hidden":"true"}},[s._v("#")]),s._v(" 二分查找")]),s._v(" "),a("p",[s._v("/\n@lc app=leetcode.cn id=704 lang=javascript\n给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的\ntarget，如果目标值存在返回下标，否则返回 -1。")]),s._v(" "),a("p",[s._v("示例 1:")]),s._v(" "),a("p",[s._v("输入: nums = [-1, 0, 3, 5, 9, 12], target = 9\n输出: 4\n解释: 9 出现在 nums 中并且下标为 4")]),s._v(" "),a("p",[s._v("示例 2:")]),s._v(" "),a("p",[s._v("输入: nums = [-1, 0, 3, 5, 9, 12], target = 2\n输出: -1\n解释: 2 不存在 nums 中因此返回 -1")]),s._v(" "),a("p",[s._v("提示：")]),s._v(" "),a("p",[s._v("你可以假设 nums 中的所有元素是不重复的。\nn 将在 [1, 10000]之间。\nnums 的每个元素都将在 [-9999, 9999]之间。")]),s._v(" "),a("p",[s._v("/\n第一反应=-=：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("nums.indexOf(target)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("46/46 cases passed (104 ms)"),a("br"),s._v("\nYour runtime beats 6.85 % of javascript submissions"),a("br"),s._v("\nYour memory usage beats 44.47 % of javascript submissions (36.8 MB)"),a("br"),s._v("\n老实用二分法：")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var search = function(nums, target) {\n    var start = 0;\n    var end = nums.length - 1;\n    while(start<=end) {\n        var mid = start+Math.floor((end - start)/2);\n        if (nums[mid] === target) {\n            return mid;\n        }\n        if (nums[mid] > target) {\n            end = mid -1;\n        }else{\n            start = mid +1;\n        }\n    }\n    return -1;\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])])]),a("p",[s._v("46/46 cases passed (64 ms)"),a("br"),s._v("\nYour runtime beats 94.63 % of javascript submissions"),a("br"),s._v("\nYour memory usage beats 44.68 % of javascript submissions (36.8 MB)")]),s._v(" "),a("h3",{attrs:{id:"二维数组中的查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二维数组中的查找","aria-hidden":"true"}},[s._v("#")]),s._v(" 二维数组中的查找")]),s._v(" "),a("p",[s._v("/\n@lc app=leetcode.cn id=74 lang=javascript")]),s._v(" "),a("p",[s._v("[74] 搜索二维矩阵\n编写一个高效的算法来判断 m x n 矩阵中，是否存在一个目标值。该矩阵具有如下特性：")]),s._v(" "),a("p",[s._v("每行中的整数从左到右按升序排列。\n每行的第一个整数大于前一行的最后一个整数。")]),s._v(" "),a("p",[s._v("示例 1:")]),s._v(" "),a("p",[s._v("输入:\nmatrix = [\n⁠ [1, 3, 5, 7],\n⁠ [10, 11, 16, 20],\n⁠ [23, 30, 34, 50]\n]\ntarget = 3\n输出: true")]),s._v(" "),a("p",[s._v("示例 2:")]),s._v(" "),a("p",[s._v("输入:\nmatrix = [\n⁠ [1, 3, 5, 7],\n⁠ [10, 11, 16, 20],\n⁠ [23, 30, 34, 50]\n]\ntarget = 13\n输出: false")]),s._v(" "),a("p",[s._v("/")]),s._v(" "),a("p",[s._v("// @lc code=start\n/\n@param {number[][]} matrix\n@param {number} target\n@return {boolean}\n/\n方法一：")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(" var searchMatrix = function(matrix, target) {\n    var rows = matrix.length;\n    var columns = rows > 0 ? matrix[0].length: 0;\n    if(!columns||!rows) {\n        return false;\n    }\n    var row = 0;\n    var column = columns -1;\n    while(row<rows && column >= 0) {\n        if(matrix[row][column] === target) {\n            return true;\n        }\n        if(matrix[row][column] > target) {\n            column--;\n        }else {\n            row++;\n        }\n    }\n    return false;\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])])]),a("p",[s._v("136/136 cases passed (160 ms)"),a("br"),s._v("\nYour runtime beats 6.44 % of javascript submissions"),a("br"),s._v("\nYour memory usage beats 5.25 % of javascript submissions (44.8 MB)"),a("br"),s._v("\n(ˇˍˇ)好慢，继续尝试...\n方法二：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var searchMatrix = function(matrix, target) {\n    if (!matrix || matrix.length === 0) {\n        return false;\n    }\n    return `,${matrix.toString()},` .match( `,${target},` )!==null;    \n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("136/136 cases passed (76 ms)"),a("br"),s._v("\nYour runtime beats 20.92 % of javascript submissions"),a("br"),s._v("\nYour memory usage beats 5.25 % of javascript submissions (37.5 MB)"),a("br"),s._v("\n(ˇˍˇ)额... ..\n方法三：")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var searchMatrix = function(matrix, target) {\n    var rows = matrix.length;\n    var columns = rows > 0 ? matrix[0].length: 0;\n    if(!columns||!rows) {\n        return false;\n    }\n    var left =0,right = rows  columns -1;\n    while(left<=right) {\n        var mid = left + Math.floor((right - left)/2);\n        var x = Math.floor(mid/columns);\n        if(matrix[x][mid%columns] > target) {\n            right = mid - 1;\n        }else if(matrix[x][mid%columns] < target) {\n            left = mid + 1;\n        }else{\n            return true;\n        }\n    }\n    return false;\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])])]),a("p",[s._v("136/136 cases passed (60 ms)"),a("br"),s._v("\nYour runtime beats 91.48 % of javascript submissions"),a("br"),s._v("\nYour memory usage beats 29.32 % of javascript submissions (34.8 MB)")]),s._v(" "),a("h3",{attrs:{id:"数组中重复的数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组中重复的数据","aria-hidden":"true"}},[s._v("#")]),s._v(" 数组中重复的数据")]),s._v(" "),a("p",[s._v("给定一个整数数组 a，其中1 ≤ a[i] ≤ n （n为数组长度）, 其中有些元素出现两次而其他元素出现一次。")]),s._v(" "),a("p",[s._v("找到所有出现两次的元素。")]),s._v(" "),a("p",[s._v("你可以不用到任何额外空间并在O(n)时间复杂度内解决这个问题吗？")]),s._v(" "),a("p",[s._v("示例：")]),s._v(" "),a("p",[s._v("输入:"),a("br"),s._v("\n[4, 3, 2, 7, 8, 2, 3, 1]")]),s._v(" "),a("p",[s._v("输出:"),a("br"),s._v("\n[2, 3]")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("分析：如果没有重复，排序后数字i在位置i上     \n抽屉原理1：把n+1个元素放入n个集合内，必定有一个集合至少含有两个或两个以上元素。     \n\n抽屉原理2：把m个元素放进n个集合内，至少有一个集合含有k个元素，其中  k=m/n (n整除m)  \nk=[m/n]+1 (n不整除m)。\n抽屉原理3：把无穷多个元素放进有限个集合，必然至少有一个集合里有无穷多个元素。       \nvar findDuplicates = function(nums) {\n    if (!nums||nums.length == 0) {\n        return [];\n    }\n    var result = [];\n    for(var i=1;i<=nums.length;++i) {\n        while(nums[i-1]!=i) {\n            if(nums[i-1]>nums.length||nums[i-1]<0) {\n                break;\n            }\n            if(nums[i-1] === nums[nums[i-1]-1]) {\n                result.push(nums[i-1]);\n                break;\n            }\n            var temp = nums[i-1];\n            nums[i-1] = nums[temp-1];\n            nums[temp-1] = temp;\n        }\n    }\n    return Array.from(new Set(result));\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])])]),a("p",[s._v("28/28 cases passed (132 ms)"),a("br"),s._v("\nYour runtime beats 63 % of javascript submissions"),a("br"),s._v("\nYour memory usage beats 30.12 % of javascript submissions (45.4 MB)")]),s._v(" "),a("h3",{attrs:{id:"删除排序数组中的重复项-ii"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除排序数组中的重复项-ii","aria-hidden":"true"}},[s._v("#")]),s._v(" 删除排序数组中的重复项 II")]),s._v(" "),a("p",[s._v("给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素最多出现两次，返回移除后数组的新长度。")]),s._v(" "),a("p",[s._v("不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。")]),s._v(" "),a("p",[s._v("示例 1:")]),s._v(" "),a("p",[s._v("给定 nums = [1, 1, 1, 2, 2, 3],")]),s._v(" "),a("p",[s._v("函数应返回新长度 length = 5, 并且原数组的前五个元素被修改为 1, 1, 2, 2, 3 。")]),s._v(" "),a("p",[s._v("你不需要考虑数组中超出新长度后面的元素。\n示例 2:")]),s._v(" "),a("p",[s._v("给定 nums = [0, 0, 1, 1, 1, 1, 2, 3, 3],")]),s._v(" "),a("p",[s._v("函数应返回新长度 length = 7, 并且原数组的前五个元素被修改为 0, 0, 1, 1, 2, 3, 3 。")]),s._v(" "),a("p",[s._v("你不需要考虑数组中超出新长度后面的元素。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("思路：相同数字向前移动覆盖")])]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\nvar removeDuplicates = function(nums) {\n    for(var i=0;i<nums.length;i++) {\n        var j = i+1;\n        while(nums[i]===nums[j]&&j<nums.length) {\n            j++;\n            if(nums[i] === nums[j]) {\n                for(var s = j;s<nums.length-1;s++) {\n                    nums[s] = nums[s+1];\n                }\n                nums.length-=1;\n                i--;\n            }else{\n                i++;\n            }\n        }\n    }\n    return nums.length;\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])])]),a("p",[s._v("166/166 cases passed (76 ms)"),a("br"),s._v("\nYour runtime beats 89.09 % of javascript submissions"),a("br"),s._v("\nYour memory usage beats 34.32 % of javascript submissions (35.9 MB)")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var removeDuplicates = function(nums) {\n    let i=0,j=1;\n    while(j<nums.length){\n        if(i>=1&&nums[j]==nums[i]&&nums[j]==nums[i-1]){\n            j++\n        }\n        else{\n            nums[++i]=nums[j++]\n        }\n    }\n    nums.length-=j-i-1\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])])]),a("h3",{attrs:{id:"链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链表","aria-hidden":"true"}},[s._v("#")]),s._v(" 链表")]),s._v(" "),a("ol",[a("li",[s._v("合并有序链表")])]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("p",[s._v("dddd")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("对链表进行插入排序")])])])}),[],!1,null,null,null);n.default=t.exports}}]);