(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{207:function(t,e,a){"use strict";a.r(e);var r=a(0),i=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"linux操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux操作系统","aria-hidden":"true"}},[t._v("#")]),t._v(" Linux操作系统")]),t._v(" "),a("h2",{attrs:{id:"webkit技术内幕"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webkit技术内幕","aria-hidden":"true"}},[t._v("#")]),t._v(" Webkit技术内幕")]),t._v(" "),a("p",[t._v("主流的演染引擎包括 Trident 、 Gecko 和 webkit，它们分别是 IE 、火狐和 Chrome 的内核。"),a("br"),t._v("\n一个渲染引擎包括：HTML解释器， CSS解释器， 布局，Javascript引擎。"),a("br"),t._v("\n渲染过程：输入到 HTML 解释器， HTML 解释器在解释它后构建成一棵 DOM 树，"),a("br"),t._v("\n如果遇到 Javascript 代码则交给 Javascript 引擎去处理；"),a("br"),t._v("\n如果网贞中包含 CSS ，则交给 CSS 解释器去解释。"),a("br"),t._v("\n当 OOM 建立的时候，渲染引擎接收来自 CSS 解释器的样式信息，构建一个新的内部绘图模型。"),a("br"),t._v("\n该模型由布局模块计算模型内部各个元素的位置和大小信息，最后由绘图模块完成从该模型到图像的绘制。")]),t._v(" "),a("h3",{attrs:{id:"html-hypertext-markup-language"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html-hypertext-markup-language","aria-hidden":"true"}},[t._v("#")]),t._v(" HTML(hypertext markup language)")]),t._v(" "),a("p",[t._v("HTML5 包括10大类别：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类别")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("内容")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("离线（offline）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Application cache , Local slorage , Indexed DB ，在线／离线")])]),t._v(" "),a("tr",[a("td",[t._v("存储（storage）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Application cache , Local storage , Indexcd DB 等")])]),t._v(" "),a("tr",[a("td",[t._v("连接（connectivity）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Web Sockets , Server-sent 事件")])]),t._v(" "),a("tr",[a("td",[t._v("文件访问（file access）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("File API , File System , Filewriter , ProgressEvents")])]),t._v(" "),a("tr",[a("td",[t._v("语义（semantics）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("各种新的元素，包括 Media , structural ，国际化，Link relation ，属性， form 类型， microdata 等方面")])]),t._v(" "),a("tr",[a("td",[t._v("音频和视频（audio/video）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("HTMLS Video , Web Audio , WebRTC, Video track 等")])]),t._v(" "),a("tr",[a("td",[t._v("3D和图形（3D/graphics）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Canvas ZD , 3D CSS 变换， WebGL , SVG 等")])]),t._v(" "),a("tr",[a("td",[t._v("展示（presentation）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("css3 2D/ 3D 变换,转换（ transition ) , webFonts 等")])]),t._v(" "),a("tr",[a("td",[t._v("性能（performance）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("web worker , HTTP caching 等")])]),t._v(" "),a("tr",[a("td",[t._v("其他（Nuts and bolts）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("触控和鼠标， Shadow DooM , css masking 等")])])])]),t._v(" "),a("h3",{attrs:{id:"webkit渲染过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webkit渲染过程","aria-hidden":"true"}},[t._v("#")]),t._v(" Webkit渲染过程")]),t._v(" "),a("ol",[a("li",[t._v("当用户输入网页 URL 的时候, WebKit 调用其资源加载器加载该 URL 对应的网页。")]),t._v(" "),a("li",[t._v("加载器依赖网络模块建立连接，发送请求并接收答复。")]),t._v(" "),a("li",[t._v("WebKit 接收到各种网页或者资源的数据，其中某些资源可能是同步或异步获取的。")]),t._v(" "),a("li",[t._v("网页被交给 HTML 解释器转变成一系列的词语（ Token ）。")]),t._v(" "),a("li",[t._v("解释器根据词语构建节点（ Node ) ，形成 DOM 树。")]),t._v(" "),a("li",[t._v("如果节点是 Javascript 代码的话，调用 Javascript 引擎解释并执行。")]),t._v(" "),a("li",[t._v("Javascript 代码可能会修改 DOM 树的结构。")]),t._v(" "),a("li",[t._v("如果节点需要依赖其他资源，例如图片、 CSS 、视频等，调用资源加载器来加载它们，但是它们是异步的，不会阻碍当前 DOM 树的继续创建；如果是 JavascriPt 资源 URL （没有标记异步方式），则需要停止当前 DOM 树的创建，直到 Javascript 的资源加载并被 Javascript 引擎执行后才继续 DOM 树的创建。"),a("br"),t._v("\n在上述的过程中，网页在加载和渲染过程中会发出“ DOMConent ”事件和 DOM 的“ onload ”事件，分别在 DOM 树构建完之后，以及 DOM 树建完并且网页所依赖。")])]),t._v(" "),a("h3",{attrs:{id:"chromium-网络栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chromium-网络栈","aria-hidden":"true"}},[t._v("#")]),t._v(" Chromium 网络栈")]),t._v(" "),a("p",[t._v("查看 chrome://net-internals"),a("br"),t._v("\nDNS解析和TCP连接占用大量的时间，所以为了高效地加载页面:")]),t._v(" "),a("ol",[a("li",[t._v("减少链接的重定向。有些网页中使用了大量的重定向，可能还会有很多次重定向，\n这不仅要求浏览器建立多次链接，同时也需要多次DNS解析，这会阻碍DNS预取技术的应用，应该尽量避免。")]),t._v(" "),a("li",[t._v("利用DNS预取机制。< link ref='dns-prefet'  href =\"http://thidnsprefetchexample.com\">")]),t._v(" "),a("li",[t._v("搭建支持SPDY协议的服务器，当然指的是那些需要使用HTTPS协议的站。")]),t._v(" "),a("li",[t._v("避免错误的链接请求。网页中包含了一些失效的链接，当浏览器试图获取该链接对应的资源的时候，就会占用网络资源。")])]),t._v(" "),a("h3",{attrs:{id:"web-components"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-components","aria-hidden":"true"}},[t._v("#")]),t._v(" Web Components")]),t._v(" "),a("ol",[a("li",[t._v("Custom elements（自定义元素）:   CustomElementRegistry.define() , Window.customElements")]),t._v(" "),a("li",[t._v("Shadow dom (影子DOM)：Element.attachShadow()，Element.shadowRoot，HTMLTemplateElement， HTMLSlotElement，\nDocumentOrShadowRoot"),a("br"),t._v("\n伪类：:host, :host(), :host-context()"),a("br"),t._v("\n伪元素：::shadow and ::content"),a("br"),t._v("\n组合器：>>> (formerly /deep/)*")]),t._v(" "),a("li",[t._v("HTML templates（HTML模板）： template 和 slot 元素")])]),t._v(" "),a("h3",{attrs:{id:"css-解释器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-解释器","aria-hidden":"true"}},[t._v("#")]),t._v(" CSS 解释器")]),t._v(" "),a("ol",[a("li",[t._v("盒模型")])]),t._v(" "),a("h2",{attrs:{id:"内容分发网络原理与实践-cdn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内容分发网络原理与实践-cdn","aria-hidden":"true"}},[t._v("#")]),t._v(" 内容分发网络原理与实践(CDN)")]),t._v(" "),a("h2",{attrs:{id:"web安全深度剖析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web安全深度剖析","aria-hidden":"true"}},[t._v("#")]),t._v(" web安全深度剖析")]),t._v(" "),a("h2",{attrs:{id:"深入理解nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深入理解nginx","aria-hidden":"true"}},[t._v("#")]),t._v(" 深入理解Nginx")])])}),[],!1,null,null,null);e.default=i.exports}}]);