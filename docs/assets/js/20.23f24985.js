(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{210:function(t,v,_){"use strict";_.r(v);var r=_(0),i=Object(r.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"我的核心"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#我的核心","aria-hidden":"true"}},[t._v("#")]),t._v(" 我的核心")]),t._v(" "),_("p",[t._v("如何用最少的代码做最多的事情，如何只专注逻辑本身")]),t._v(" "),_("h2",{attrs:{id:"遇到的问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#遇到的问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 遇到的问题")]),t._v(" "),_("ol",[_("li",[t._v("设计，交互风格随着人员变化而变化，伴随而来的是琐碎，重复地返工过程，每一次的返工，\n都导致代码生命的尽头。 然而更随潮流，变更是无法抗拒的过程，那么怎样才能快速，最小化地满足变更？")]),t._v(" "),_("li",[t._v("ToB的产品形态，在固定的领域内也是相对固定的，那么不变的是什么，变化的是什么？\n如何利用这份相对做到更快地交付？")]),t._v(" "),_("li",[t._v("在业务支撑过程偿还了大量最早的欠考虑的债  (ume最初只考虑为两个功能存活，"),_("br"),t._v("\n当扑面而来的各种独立的小功能的时候，在笨重冗余的路上一去不复返),"),_("br"),t._v("\n这样就需要考虑，同一个功能，不同平台，业务的数据流存在相同的时候，这层如何复用。"),_("br"),t._v("\n能否用一份代码打包出不同平台。（PC，移动，小程序，electron）")]),t._v(" "),_("li",[t._v("开发完成后没有一套共同认知的测试方案，对自身代码如果在开发周期内没有做到极尽测试\n后面的修改的成本将随时间成倍增长。对前端的自测，到底要测哪些内容，用什么方式测,以及如何回归？")]),t._v(" "),_("li",[t._v("维护的困难：底层工具库不统一，编程范式不统一，没有任何描述，耦合严重，没有为未来预留 。")]),t._v(" "),_("li",[t._v("开发协作，人事变动，项目交接没有明确的need to know，不同的经历或者习惯，必然造就一些不必要的问题。")]),t._v(" "),_("li",[t._v("无效总结：我犯过的错误只是我的积累，换个人重复地犯着一样的错误，如何让积累成为共同？")])]),t._v(" "),_("h2",{attrs:{id:"重构到底重构什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重构到底重构什么","aria-hidden":"true"}},[t._v("#")]),t._v(" 重构到底重构什么")]),t._v(" "),_("ol",[_("li",[_("strong",[t._v("持续性")])])]),t._v(" "),_("blockquote",[_("p",[t._v("1.1)"),_("br"),t._v("\n1.2)")])]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[_("strong",[t._v("可维护性")])])]),t._v(" "),_("blockquote",[_("p",[t._v("2.1)我为什么想使用Typescript?")]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("使用类型和接口等概念来描述正在使用的数据，是极好的文档")]),t._v(" "),_("li",[t._v("让javascript的面向对象的特性更加明显")]),t._v(" "),_("li",[t._v("减少运行时错误")])])])]),t._v(" "),_("blockquote",[_("p",[t._v("2.2)我为什么不想使用Typescript?")]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("javascript 的开发者社区更巨大，更方便找到成熟的项目和可用资源")]),t._v(" "),_("li",[t._v("OPP开发经验很薄弱的时候，无法真正地利大于弊")]),t._v(" "),_("li",[t._v("无法说服自己面对存在仅需要修改语法的工作")])])])]),t._v(" "),_("blockquote",[_("p",[t._v("2.3) 见"),_("router-link",{attrs:{to:"/guide/requirements.html#typescript-运用"}},[t._v("Typescript的运用")])],1)]),t._v(" "),_("h2",{attrs:{id:"整个架构组成的思考的角度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#整个架构组成的思考的角度","aria-hidden":"true"}},[t._v("#")]),t._v(" 整个架构组成的思考的角度")]),t._v(" "),_("ol",[_("li",[t._v("系统级：前后端分离，微前端，监控")]),t._v(" "),_("li",[t._v("应用级：组件库 (改轮子进而贴近实际)")]),t._v(" "),_("li",[t._v("模块级：组件化，模块化")])]),t._v(" "),_("blockquote",[_("p",[t._v("3.1）如何设计合理的方式管理CSS，复用，隔离变化，通用变量"),_("br"),t._v("\n3.2）组件封闭原则和粒度")])]),t._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[t._v("代码级：规范(示例包含简单功能流程，可快速依葫芦画瓢)，原则，质量")])]),t._v(" "),_("blockquote",[_("p",[t._v("4.1）开发流程：代码合并方式->代码提交信息（git hooks 检查）->代码规范自动化（Prettier + git hooks）->测试编写（测试驱动开发）"),_("br"),t._v("\n4.2)")])]),t._v(" "),_("h2",{attrs:{id:"todo-list"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#todo-list","aria-hidden":"true"}},[t._v("#")]),t._v(" Todo List")]),t._v(" "),_("ul",[_("li",[t._v("[ ] "),_("strong",[t._v("整理利用typescript整改例子")])]),t._v(" "),_("li",[t._v("[ ] "),_("strong",[t._v("编写git hooks")])]),t._v(" "),_("li",[t._v("[ ] "),_("strong",[t._v("编写vscode i18n 插件")])]),t._v(" "),_("li",[t._v("[ ] "),_("strong",[t._v("编写范例")])]),t._v(" "),_("li",[t._v("[ ] "),_("strong",[t._v("编写自动化测试范例")])]),t._v(" "),_("li",[t._v("[ ] "),_("strong",[t._v("编写node命令行工具")])]),t._v(" "),_("li",[t._v("[ ] "),_("strong",[t._v("编写项目整体基调")])]),t._v(" "),_("li",[t._v("[ ] "),_("strong",[t._v("编写组件库整改方式")])])])])}),[],!1,null,null,null);v.default=i.exports}}]);